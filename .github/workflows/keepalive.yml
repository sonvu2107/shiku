name: Keep Render Server Alive

on:
  schedule:
    # Chạy mỗi 10 phút để đảm bảo server không sleep
    - cron: '*/10 * * * *'
  workflow_dispatch: # Cho phép chạy thủ công từ GitHub Actions tab

jobs:
  keepalive:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🚀 Ping Server Health Endpoint
        run: |
          echo "🔄 Pinging server to keep it alive..."
          
          # URL thực tế của server
          HEALTH_URL="https://api.shiku.click"
          
          # Ping health endpoint với timeout 30s
          response=$(curl -s -w "%{http_code}" -o /tmp/response.json --max-time 30 "$HEALTH_URL" || echo "000")
          
          if [ "$response" = "200" ]; then
            echo "✅ Server is alive! Response code: $response"
            echo "📊 Server stats:"
            cat /tmp/response.json | jq '.' 2>/dev/null || cat /tmp/response.json
          elif [ "$response" = "000" ]; then
            echo "❌ Server is unreachable (timeout or connection error)"
            exit 1
          else
            echo "⚠️ Server responded with code: $response"
            echo "Response body:"
            cat /tmp/response.json 2>/dev/null || echo "No response body"
            exit 1
          fi
          
      - name: 📊 Additional Health Checks
        if: success()
        run: |
          echo "🔍 Running additional health checks..."
          
          # Ping main API endpoint
          API_URL="https://api.shiku.click/api"
          api_response=$(curl -s -w "%{http_code}" -o /dev/null --max-time 15 "$API_URL" || echo "000")
          
          if [ "$api_response" = "404" ] || [ "$api_response" = "200" ]; then
            echo "✅ API endpoint accessible (code: $api_response)"
          else
            echo "⚠️ API endpoint issue (code: $api_response)"
          fi
          
          # Check if it's a cold start (long response time indicates server was sleeping)
          start_time=$(date +%s%N)
          curl -s --max-time 30 "https://api.shiku.click" > /dev/null
          end_time=$(date +%s%N)
          duration=$(( (end_time - start_time) / 1000000 )) # Convert to milliseconds
          
          if [ $duration -gt 5000 ]; then
            echo "🥶 Cold start detected! Response time: ${duration}ms"
          else
            echo "🔥 Server was warm! Response time: ${duration}ms"
          fi

      - name: 📧 Notify on Failure
        if: failure()
        run: |
          echo "🚨 Server keepalive failed!"
          echo "This could indicate:"
          echo "- Server is down"
          echo "- Render service issues"
          echo "- Network connectivity problems"
          echo ""
          echo "Manual check recommended: https://api.shiku.click"